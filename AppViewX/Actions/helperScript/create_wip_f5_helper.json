{"name":"create_wip_f5_helper","scriptType":"Python","scriptContent":"def get_pool_name_parameter(wip_pool_list, lb_method):\n    \"\"\"Function return the pool name in string format\"\"\"\n    pool_names_str = \"\" \n    for each_pool in wip_pool_list:\n        wip_pool_name = '\"' + each_pool[\"wip_pool_name\"] + '\"' if each_pool[\"wip_pool_name\"].strip().find(' ') != -1 else each_pool[\"wip_pool_name\"]\n        if lb_method == \"ratio\":\n            pool_names_str += wip_pool_name + ' ' + ' { ratio ' + each_pool[\"wip_pool_ratio\"] + ' }' + ' '\n        else:\n            pool_names_str += wip_pool_name + ' '\n    if pool_names_str:\n        pool_names_str = ' { pools add { ' + pool_names_str + ' }'\n    return pool_names_str + ' pool-lb-mode ' + lb_method + ' '\n\n\ndef operation_wide_ip(version, Form_dict, purpose=\"Implementation\"):\n    '''Create\\delete\\list wideip using vip pools'''\n    if purpose == \"Implementation\":\n        wip_pool_name = get_pool_name_parameter(Form_dict[\"wip_pool_list\"], Form_dict[\"wip_lb\"])\n        if version == 'v12' or version == 'v13':\n            cmd = 'create gtm wideip a ' + Form_dict[\"wip_name\"] + wip_pool_name\n        else:\n            cmd = 'create gtm wideip ' + Form_dict[\"wip_name\"] + wip_pool_name \n        if Form_dict[\"wip_alias\"]:\n            cmd += ' aliases add { ' + Form_dict[\"wip_alias\"] + ' } '\n        if Form_dict[\"wip_persistence\"] == \"enabled\":\n            cmd += ' persistence enabled ttl-persistence ' + Form_dict[\"ttl\"] + ' }'\n        else:\n            cmd += ' persistence disabled }'\n        cmd = [cmd]\n    elif purpose == \"delete\":\n        if version == 'v12' or version == 'v13':\n            cmd = ['delete gtm wideip a ' + Form_dict[\"wip_name\"]]\n        else:\n            cmd = ['delete gtm wideip ' + Form_dict[\"wip_name\"]]\n    else:\n        cmd = []\n        if version == 'v12' or version == 'v13':\n            cmd.append('list gtm wideip a ' + Form_dict[\"wip_name\"])\n            cmd.append('show gtm wideip a ' + Form_dict[\"wip_name\"])\n        else:\n            cmd.append('list gtm wideip ' + Form_dict[\"wip_name\"])\n            cmd.append('show gtm wideip ' + Form_dict[\"wip_name\"])\n    return cmd\n\ndef operation_topology_record(region_list, purpose = \"Implementation\"):\n    cmd = []\n    for val in region_list:\n        pool = '\"' + val[\"region_pool\"] + '\"' if val[\"region_pool\"].strip().find(' ') != -1 else val[\"region_pool\"]\n        region = '\"' + val[\"region_list\"] + '\"' if val[\"region_list\"].strip().find(' ') != -1 else val[\"region_list\"]\n        if purpose == \"Implementation\":\n            cmd.append('create gtm topology ldns: region '+region+' server: pool '+pool+' score '+val[\"region_score\"])\n        elif purpose == \"delete\":\n            cmd.append('delete gtm topology ldns: region '+region+' server: pool '+pool)\n        else:\n            cmd.append('list gtm topology ldns: region '+region+' server: pool '+pool)\n    return cmd\n\ndef get_monitor_parameter(monitor_list):\n    mon_string = \" \"\n    for each_mon in monitor_list:\n        mon_string += each_mon[\"list_health_mon\"]+\" and \"\n    if len(mon_string) > 2:\n        mon_string=mon_string[:-4]\n    return mon_string\n\ndef operation_wip_servers(Form_dict, purpose = \"Implementation\"):\n    '''Create\\Delete\\list wip servers to associate '''\n    cmd =[]\n    server_name =[]\n    for val in Form_dict[\"pm_member_list\"]:  \n        #Handled space in the gtm server\n        if val['pool_member_type'] == 'Generic Host':\n            server_gtm_name = '\"'+val[\"gh_gtm_server\"]+'\"' if \" \" in  val[\"gh_gtm_server\"].strip() else val[\"gh_gtm_server\"]\n        if val['pool_member_type'] == 'Generic Host' and purpose == \"Implementation\":           \n            cmd.append('modify gtm server '+ server_gtm_name +' virtual-servers add { '+ val['generic_host_ip'] +' { destination '+val['generic_host_ip']+':'+val['generic_host_port'] +' } }')\n            #server_name.append(val[\"gh_gtm_server\"]:val['generic_host_ip'])\n        elif val['pool_member_type'] == 'Generic Host' and purpose == \"delete\":\n            cmd.append('modify gtm server '+ server_gtm_name +' virtual-servers delete { '+ val['generic_host_ip'] +' }')\n        elif val['pool_member_type'] == 'Generic Host' and purpose == \"list\":               \n            cmd.append('show gtm server ' + server_gtm_name)\n            cmd.append('list gtm server ' + server_gtm_name)\n    cmd = list(set(cmd))\n    #return cmd, server_name\n    return cmd\n\ndef operation_gtm_pool(version, Form_dict, purpose = \"Implementation\"):\n    '''Create\\Delete\\list wip pool'''\n    cmd = []\n    pool_lb_method = Form_dict[\"pm_preferred\"]\n    for each_pool in Form_dict[\"wip_pool_list\"]:\n        if purpose == \"Implementation\":\n            if version == 'v12' or version == 'v13':\n                pool_command = 'create gtm pool a '+each_pool[\"wip_pool_name\"]+' load-balancing-mode '+Form_dict[\"pm_preferred\"]\n            else:\n                pool_command = 'create gtm pool '+each_pool[\"wip_pool_name\"]+' load-balancing-mode '+Form_dict[\"pm_preferred\"]\n            if Form_dict[\"associate_mon\"] ==\"Yes\":\n                pool_command += ' monitor ' + get_monitor_parameter(Form_dict[\"pm_monitor_list\"])+ \" \"\n            pool_command += ' members add { '\n            for val in Form_dict[\"pm_member_list\"]:\n                #Handled space in the gtm server\n                if val['pool_member_type'] == 'Generic Host':\n                    server_gtm_name = '\"'+val[\"gh_gtm_server\"]+'\"' if \" \" in  val[\"gh_gtm_server\"].strip() else val[\"gh_gtm_server\"]\n                else:\n                    name_ip = val[\"pm_vip\"].split(\":\")\n                    existing_vip = '\"'+name_ip[0]+'\":'+name_ip[1] if \" \" in name_ip[0].strip() else val[\"pm_vip\"]\n                if pool_lb_method == 'ratio' and val[\"pool_select\"] == each_pool[\"wip_pool_name\"]:\n                    if val['pool_member_type'] == 'Generic Host':\n                        pool_command += server_gtm_name+':'+val['generic_host_ip']+' { ratio '+val['pm_ratio']+' } '\n                    else: \n                        pool_command += existing_vip+' { ratio '+val['pm_ratio']+' } '\n                elif pool_lb_method != 'ratio' and val[\"pool_select\"] == each_pool[\"wip_pool_name\"]:\n                    if val['pool_member_type'] == 'Generic Host':\n                        pool_command += server_gtm_name+':'+val['generic_host_ip']+' '\n                    else: \n                        pool_command += existing_vip+' '\n            pool_command += '}'\n            pool_command += ' alternate-mode '+Form_dict[\"pm_alternate\"] +' fallback-mode '+Form_dict[\"pm_fallback\"]\n            if Form_dict[\"pm_fallback\"] ==\"fallback-ip\":\n                pool_command += (' fallback-ip ' if version == 'v12' or version == 'v13' else ' fallback-ipv4 ') +Form_dict[\"pm_fallback_ip\"]\n            cmd.append(pool_command)\n        elif purpose == \"delete\":\n            if version == 'v12' or version == 'v13':\n                cmd.append('delete gtm pool a '+each_pool[\"wip_pool_name\"])\n            else:\n                cmd.append('delete gtm pool '+each_pool[\"wip_pool_name\"])\n        else:\n            if version == 'v12' or version == 'v13':\n                cmd.append('list gtm pool a '+each_pool[\"wip_pool_name\"])\n                cmd.append('show gtm pool a '+each_pool[\"wip_pool_name\"])\n            else:\n                cmd.append('list gtm pool '+each_pool[\"wip_pool_name\"])\n                cmd.append('show gtm pool '+each_pool[\"wip_pool_name\"])\n    return cmd","description":"","readOnly":false,"version":"Version 2.x","historyReferences":[],"usedHistory":null,"sourceControlSettings":null,"_id":"create_wip_f5_helper","_keywords":["create_wip_f5_helper","","Version 2.x"]}